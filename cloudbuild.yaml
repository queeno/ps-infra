steps:
  # Retrieve GCloud access token
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: /bin/sh
    args: ['-c', 'gcloud auth print-access-token > access_token.txt']

  # Download ps-app Helm chart from GCR
  - name: alpine/helm
    env:
      - HELM_EXPERIMENTAL_OCI=1
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        cat access_token.txt | helm registry login eu.gcr.io -u oauth2accesstoken --password-stdin && \
        helm chart pull eu.gcr.io/$PROJECT_ID/ps-app-helm:0.0.1 && \
        helm chart export eu.gcr.io/$PROJECT_ID/ps-app-helm:0.0.1

  # Make sure a bucket exists to hold state file
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: /bin/sh
    args:
      - '-c'
      - 'gsutil ls gs://$_BUCKET_NAME || gsutil mb -l $_REGION -p $PROJECT_ID gs://$_BUCKET_NAME'

  # Run terraform
  - name: hashicorp/terraform
    env:
      - TF_VAR_project_id=$PROJECT_ID
      - TF_VAR_region=$_REGION
    entrypoint: sh
    args:
      - '-c'
      - |
        ls -lah &&
        terraform init -upgrade -backend-config="bucket=$_BUCKET_NAME" && \
        terraform apply -auto-approve

substitutions:
  _REGION: europe-west4
  _BUCKET_NAME: ps-infra-terraform-state-file
